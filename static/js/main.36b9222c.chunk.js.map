{"version":3,"sources":["serviceWorker.js","Components/Home.js","Components/models/User.js","BackendURL.js","Components/Login.js","Components/Navbar.js","index.js"],"names":["Boolean","window","location","hostname","match","Home","state","continent","packagePage","successMessage","homePage","emailId","handleChange","event","target","name","value","setState","handleClick","preventDefault","getPackages","e","key","toUpperCase","slice","toLowerCase","sessionStorage","setItem","this","to","className","id","type","onKeyPress","onChange","placeholder","onClick","href","Component","Users","backendUrlLogin","Login","register","errorMessage","loginForm","contactNo","password","contactErrorMessage","passwordErrorMessage","validPassWord","validContactNumber","login","contactNumber","document","getElementById","user","axios","post","then","response","data","userId","userName","reload","catch","err","cancel","console","log","validate","fieldName","regex","RegExp","test","regexCAp","regexLow","regexNum","required","min","max","htmlFor","severity","text","NavBar","props","dialog_visible","onHide","logout","clear","logged_out","confirm_logout","logged_userId","getItem","logged_userName","exact","path","component","ReactDOM","render","Navbar","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.36b9222c.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport \"../custom.css\";\nclass Home extends Component {\n  state = {\n    continent: \"\",\n    packagePage: false,\n    successMessage: \"\",\n    homePage: \"\",\n    emailId: \"\"\n  };\n  handleChange = event => {\n    const target = event.target;\n    const name = target.name;\n    const value = target.value;\n    this.setState({ [name]: value });\n  };\n\n  handleClick = event => {\n    event.preventDefault();\n    this.setState({\n      successMessage:\n        \"Thank you for subscribing. Updates will be sent to the subscribing Email ID\"\n    });\n  };\n  getPackages = e => {\n    //console.log(e.key)\n\n    if (e.key === \"Enter\" || e.target.value === \"SearchButton\") {\n      if (this.state.continent !== \"\") {\n        var contin = this.state.continent[0].toUpperCase();\n        var continu = this.state.continent.slice(1).toLowerCase();\n        var continent = contin + continu;\n        sessionStorage.setItem(\"continent\", continent);\n        this.setState({ packagePage: true });\n      }\n    }\n  };\n  render() {\n    if (this.state.packagePage === true)\n      return <Redirect to={\"/packages/\" + this.state.continent} />;\n    return (\n      <div>\n        <header className=\"masthead book-page\" id=\"page-top\">\n          <div className=\"container d-flex h-100 align-items-center\">\n            <div className=\"mx-auto text-center\">\n              <h1 className=\"mx-auto my-0 text-uppercase\">Wanderlust</h1>\n              <h2 className=\"text-white-50 mx-auto mt-2 mb-5\">\n                All that is gold does not glitter, Not all those who wander are\n                lost.\n              </h2>\n              <div className=\"form-inline d-flex\">\n                <input\n                  type=\"text\"\n                  className=\"form-control-lg flex-fill\"\n                  name=\"continent\"\n                  value={this.state.continent}\n                  onKeyPress={e => {\n                    this.getPackages(e);\n                  }}\n                  onChange={this.handleChange}\n                  id=\"continent\"\n                  placeholder=\"Where?\"\n                />\n                &nbsp;\n                <button\n                  className=\"btn btn-primary\"\n                  value={\"SearchButton\"}\n                  onClick={this.getPackages}\n                >\n                  Search\n                </button>\n              </div>\n            </div>\n          </div>\n        </header>\n        <section id=\"about\" className=\"about-section text-center\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-lg-8 mx-auto\">\n                <h2 className=\"text-white mb-4\">\n                  Unleash the traveller inside you\n                </h2>\n                <p className=\"about-paragraph text-center\">\n                  When someone makes a travel plan, the first few things they\n                  want to sort out, are flights, accommodation, and other\n                  amenities for a convenient holiday. To enjoy holidays, you\n                  want to have the basics taken care of, especially for family\n                  vacations and honeymoon trips. You want your accommodation,\n                  return flight bookings, meals of the days, and other traveling\n                  formalities sorted beforehand. At <a href=\"/\">Wanderlust</a>,\n                  we take care of all the requirements to ensure that you get to\n                  enjoy the best of your holiday, exploring and experiencing the\n                  destination.\n                </p>\n              </div>\n            </div>\n          </div>\n        </section>\n        {/* Remove this section later */}\n        <section>\n          <h2 className=\"text-center my-5 mb-5\">Display hotdeals here</h2>\n        </section>\n\n        <section id=\"signup\" className=\"signup-section\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-10 col-lg-8 mx-auto text-center\">\n                <h2 className=\"text-white mb-5\">\n                  Subscribe to receive updates!\n                </h2>\n                <form className=\"form-inline d-flex\">\n                  <input\n                    type=\"email\"\n                    className=\"form-control flex-fill mr-0 mr-sm-2 mb-3 mb-sm-0\"\n                    id=\"inputEmail\"\n                    name=\"emailId\"\n                    value={this.state.emailId}\n                    onChange={this.handleChange}\n                    placeholder=\"Enter email address...\"\n                  />\n                  <button\n                    type=\"submit\"\n                    className=\"btn btn-primary mx-auto\"\n                    onClick={this.handleClick}\n                  >\n                    Subscribe\n                  </button>\n                </form>\n              </div>\n            </div>\n            <br />\n            {this.state.successMessage ? (\n              <span className=\"text-danger text-center\">\n                {this.state.successMessage}\n              </span>\n            ) : null}\n          </div>\n        </section>\n        <section className=\"contact-section bg-black\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-4 mb-3 mb-md-0\">\n                <div className=\"card py-4 h-100\">\n                  <div className=\"card-body text-center\">\n                    <h4 className=\"text-uppercase m-0\">Address</h4>\n                    <hr className=\"my-4\" />\n                    <div className=\"small text-black-50\">Infosys, Mysuru</div>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"col-md-4 mb-3 mb-md-0\">\n                <div className=\"card py-4 h-100\">\n                  <div className=\"card-body text-center\">\n                    <h4 className=\"text-uppercase m-0\">Email</h4>\n                    <hr className=\"my-4\" />\n                    <div className=\"small text-black-50\">\n                      <Link to=\"/home\">yaviv@infosys.com</Link>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"col-md-4 mb-3 mb-md-0\">\n                <div className=\"card py-4 h-100\">\n                  <div className=\"card-body text-center\">\n                    <h4 className=\"text-uppercase m-0\">Phone</h4>\n                    <hr className=\"my-4\" />\n                    <div className=\"small text-black-50\">+91 9999999999</div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n      </div>\n    );\n  }\n}\nexport default Home;\n","export class Users{\n    userId;\n    userName;\n    emailId;\n    contactNumber;\n    password;\n    message;\n\n}","export const backendUrlLogin = `http://localhost:4000/Wanderlust_Server/UserAPI/userLogin`;\n","import React, { Component } from \"react\";\nimport \"../custom.css\";\nimport { Redirect } from \"react-router-dom\";\nimport { Users } from \"./models/User\";\nimport axios from \"axios\";\nimport { Message } from \"primereact/message\";\nimport { InputText } from \"primereact/inputtext\";\nimport { backendUrlLogin } from \"../BackendURL\";\nclass Login extends Component {\n  state = {\n    successMessage: \"\",\n    register: false,\n    errorMessage: \"\",\n    loginForm: {\n      contactNo: \"\",\n      password: \"\"\n    },\n    contactNo: \"\",\n    contactErrorMessage: \"\",\n    password: \"\",\n    passwordErrorMessage: \"\",\n    validPassWord: false,\n    validContactNumber: false\n  };\n\n  login = event => {\n    event.preventDefault();\n    var contactNumber = document.getElementById(\"contactNumber\").value;\n    var password = document.getElementById(\"password\").value;\n    var user = new Users();\n    user.contactNumber = contactNumber;\n    user.password = password;\n    axios\n      .post(backendUrlLogin, user)\n      .then(response => {\n        this.setState({\n          register: false,\n          successMessage: \"user logged in\"\n        });\n        sessionStorage.setItem(\"userId\", response.data.userId);\n        sessionStorage.setItem(\"userName\", response.data.userName);\n        window.location.reload();\n      })\n      .catch(err => {\n        this.setState({\n          successMessage: \"\",\n          errorMessage: \"The entered contact number or password is incorrect. Please enter valid credentials.\"\n        });\n      });\n  };\n\n  cancel = () => {\n    //  var contactNumber = null;\n    //  var password = null;\n  };\n\n  register = () => {\n    this.setState({\n      register: true\n    });\n    console.log(this.state.register);\n  };\n\n  validate = event => {\n    var fieldName = event.target.name;\n    var value = event.target.value;\n    var errorMessage = \"\";\n    switch (fieldName) {\n      case \"contactNo\":\n        errorMessage = \"field required\";\n        if (value) {\n          var regex = new RegExp(/^[6-9][0-9]{9}$/);\n          console.log(regex.test(value));\n          regex.test(value)\n            ? (errorMessage = \"\")\n            : (errorMessage += \" Should be a valid indian number\");\n          if (errorMessage !== \"field required\") {\n            this.setState({ contactErrorMessage: errorMessage });\n          } else {\n            this.setState({\n              contactErrorMessage: \"\",\n              validContactNumber: true\n            });\n          }\n         \n        }\n         this.setState({\n            contactNo: value\n          });\n        break;\n      case \"password\":\n        errorMessage = \"field required\";\n        if (value) {\n          var regexCAp = new RegExp(/^.*[A-Z].*$/);\n          var regexLow = new RegExp(/^.*[a-z].*$/);\n          var regexNum = new RegExp(/^.*[0-9].*$/);\n          regexCAp.test(value)\n            ? (errorMessage = \"\")\n            : (errorMessage =\n                errorMessage + \" Should contain atleast 1 upper case letter\");\n          regexLow.test(value)\n            ? (errorMessage = \"\")\n            : (errorMessage =\n                errorMessage + \" Should contain atleast 1 lower case letter \");\n          regexNum.test(value)\n            ? (errorMessage = \"\")\n            : (errorMessage =\n                errorMessage + \" Should contain atleast 1 number\");\n          if (errorMessage !== \"field required\") {\n            this.setState({ passwordErrorMessage: errorMessage });\n          } else {\n            this.setState({\n              passwordErrorMessage: \"\",\n              validPassWord: true\n            });\n          }\n\n         \n        } this.setState({\n            password: value\n          });\n        break;\n        default:\n          break;\n    }\n  };\n  render() {\n    if (this.state.register === true) return <Redirect to={\"/register\"} />;\n    else if (this.state.successMessage !== \"\") return <Redirect to={\"/\"} />;\n    return (\n      <div>\n        <div className=\"row my-5\">\n          <section className=\"col\"></section>\n          <section className=\"col\">\n            <form className=\"form form-horizontal\">\n              <div className=\"form-group\">\n                <span className=\"p-float-label\">\n                  <InputText\n                    id=\"contactNumber\"\n                    required\n                    type=\"text\"\n                    min=\"6000000000\"\n                    max=\"9999999999\"\n                    name=\"contactNo\"\n                    onChange={this.validate}\n                    className=\"form-control\"\n                    value={this.state.contactNo}\n                  />\n                  {\n                    <label htmlFor=\"contactNo\" className=\"font-weight-bold\">\n                      Contact Number\n                    </label>\n                  }\n                </span>\n                {this.state.contactErrorMessage ? (\n                  <Message\n                    severity=\"error\"\n                    text={this.state.contactErrorMessage}\n                  />\n                ) : null}\n              </div>\n              <br />\n              <div className=\"form-group\">\n                <span className=\"p-float-label\">\n                  <InputText\n                    id=\"password\"\n                    // value={this.state.loginForm.password}\n                    required\n                    type=\"password\"\n                    name=\"password\"\n                    className=\"form-control\"\n                    onChange={this.validate}\n                    value={this.state.password}\n                  />\n                  {\n                    <label htmlFor=\"password\" className=\"font-weight-bold\">\n                      Password\n                    </label>\n                  }\n                </span>\n                {this.state.passwordErrorMessage ? (\n                  <Message\n                    severity=\"error\"\n                    text={this.state.passwordErrorMessage}\n                  />\n                ) : null}\n              </div>\n              <br />\n              <div className=\"form-group\">\n                <div className=\"row\">\n                  <div className=\"col\">\n                    <button\n                      type=\"submit\"\n                      className=\"btn btn-success form-control\"\n                      onClick={this.login}\n                    >\n                      Login\n                    </button>\n                  </div>\n                  <div className=\"col\">\n                    <button\n                      type=\"submit\"\n                      className=\"col btn btn-secondary form-control\"\n                    >\n                      Cancel\n                    </button>\n                  </div>\n                </div>\n                <button\n                  type=\"submit\"\n                  className=\"my-4 col btn btn-primary form-control\"\n                  onClick={this.register}\n                >\n                  Register\n                </button>\n                <span className=\"text-danger\">{this.state.errorMessage}</span>\n                <span className=\"text-success\">{this.state.successMessage}</span>\n\n              </div>\n            </form>\n          </section>\n          <section className=\"col\"></section>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import React, { Component } from \"react\";\nimport \"../index.css\";\nimport Home from \"./Home\";\nimport Login from \"./Login\";\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\nclass NavBar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      logged_userId: sessionStorage.getItem(\"userId\"),\n      logged_userName: sessionStorage.getItem(\"userName\"),\n      dialog_visible: false,\n      logged_out: false\n    };\n  }\n\n  onClick = () => {\n    this.setState({ dialog_visible: true });\n  };\n\n  onHide = () => {\n    this.setState({ dialog_visible: false });\n  };\n\n  logout = () => {\n    this.setState({ dialog_visible: false });\n    sessionStorage.clear();\n    this.setState({ logged_out: true });\n    window.location.reload();\n  };\n\n  confirm_logout = () => {\n    this.setState({ dialog_visible: true });\n  };\n  render() {\n    return (\n      <div>\n        <Router>\n          {/* <div className=\"container-fluid\"> */}\n          <div className=\"App\">\n            <nav className=\"navbar navbar-expand-md bg-dark navbar-dark\">\n              <div className=\"navbar-header\">\n                <Link className=\"navbar-brand\" to=\"/\">\n                  Start Wandering\n                </Link>\n              </div>\n              <ul className=\"navbar-nav ml-auto\">\n                {this.state.logged_userId ? (\n                  <li className=\"nav-item\">\n                    <Link className=\"nav-link\" to=\"\">\n                      Welcome {this.state.logged_userName}\n                    </Link>\n                  </li>\n                ) : null}\n                <li className=\"nav-item\">\n                  <Link className=\"nav-link\" to=\"/packages\">\n                    Hot Deals{\" \"}\n                  </Link>\n                </li>\n                <li className=\"nav-item\">\n                  <Link className=\"nav-link\" to=\"/viewBookings\">\n                    Planned Trips\n                  </Link>\n                </li>\n\n                {!this.state.logged_userId ? (\n                  <li className=\"nav-item\">\n                    <Link className=\"nav-link\" to=\"/login\">\n                      {\" \"}\n                      Login\n                    </Link>\n                  </li>\n                ) : null}\n                {this.state.logged_userId ? (\n                  <li className=\"nav-item\">\n                    <Link className=\"nav-link\" onClick={this.logout} to=\"\">\n                      {\" \"}\n                      Logout\n                    </Link>\n                  </li>\n                ) : null}\n              </ul>\n            </nav>\n\n            <Switch>\n              <Route exact path=\"/\" component={Home}></Route>\n              <Route exact path=\"/login\" component={Login}></Route>\n            </Switch>\n          </div>\n        </Router>\n      </div>\n    );\n  }\n}\nexport default NavBar;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n//import Home from './Components/Home';\nimport Navbar from './Components/Navbar';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/js/bootstrap.js';\nimport \"primereact/resources/themes/nova-light/theme.css\";\nimport \"primereact/resources/primereact.min.css\";\nimport \"primeicons/primeicons.css\";\nReactDOM.render(<Navbar />, document.getElementById('navbar'));\n// ReactDOM.render(<Home />, document.getElementById('home'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}